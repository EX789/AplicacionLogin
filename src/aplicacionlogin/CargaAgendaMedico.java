/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplicacionlogin;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import org.datacontract.schemas._2004._07.backend.ArrayOfMedico;
import clases.Medico;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.bind.JAXBElement;
import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import org.datacontract.schemas._2004._07.backend.AgendaMedico;
import org.datacontract.schemas._2004._07.backend.ArrayOfAgendaMedico;
import org.datacontract.schemas._2004._07.backend.ObjectFactory;

public class CargaAgendaMedico extends javax.swing.JFrame {

    Date fechaO;

    public CargaAgendaMedico(String fecha, Date fechaOriginal) {
        initComponents();
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);//Se evitar a la posiblidad de cerrar otras ventanas
        cbMedico.setModel(clases.FuncionesMedico.cargarComboBox());//Se obtendra el modelo del ComboBox de la clase FuncionesMedico
        txtFechaView.setText(fecha); //Se obtendra la fecha previamente obtenida de la ventana anterior
        fechaO = fechaOriginal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbMedico = new javax.swing.JComboBox<>();
        btnAceptar = new javax.swing.JButton();
        txtFechaView = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tHoras1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Carga Agenda Medico");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Fecha:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Medico:");

        cbMedico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Elija Un Medico--", "Item 2", "Item 3", "Item 4" }));

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        tHoras1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "09:00"},
                {null, "09:31"},
                {null, "10:01"},
                {null, "10:31"},
                {null, "11:01"},
                {null, "11:31"},
                {null, "12:01"},
                {null, "12:31"},
                {null, "13:01"},
                {null, "13:31"},
                {null, "14:01"},
                { new Boolean(false), "14:31"},
                {null, "15:01"},
                {null, "15:31"},
                {null, "16:01"},
                {null, "16:31"},
                {null, "17:01"},
                {null, "17:31"},
                {null, "18:01"},
                {null, "18:31"},
                {null, "19:01"},
                {null, null}
            },
            new String [] {
                "Seleccionar", "Hora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tHoras1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbMedico, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtFechaView))))))
                .addContainerGap(87, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAceptar)
                .addGap(66, 66, 66))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFechaView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAceptar)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        String texto = "";
        boolean verificar;//Variable booleana que verificara si se ha marcado un checkbox
        ArrayOfAgendaMedico lista = new ArrayOfAgendaMedico();
        for (int a = 0; a < tHoras1.getRowCount(); a++) {//Se recorrera la columna de la tabla
            verificar = false;//Se inicializa la variable en falso
            for (int b = 0; b < tHoras1.getColumnCount(); b++) {//Se recorrera la fila
                if (tHoras1.getValueAt(a, b) instanceof Boolean) {//Si el elemento actual de la iteracion es un "Boolean", se procedera.
                    if ((boolean) tHoras1.getValueAt(a, b) == true) {
                        verificar = true;//Si el checkbox esta marcado, se ingresara en la variable un valor 'true'
                        continue;
                    }
                }
                if (tHoras1.getValueAt(a, b) instanceof String) {//Si el elemento seleccionado de a Iteracion es un String, se procedera
                    if (verificar == true) {//Si verificar esta en true, se procedera a executar las acciones
                        try {
                            texto = tHoras1.getValueAt(a, b).toString();//Se obtendra la hora seleccionada
                            String[] t = texto.split(":");//Se se creara un Split o division de la hora seleccionada. Obteniendo las horas y minutos
                            AgendaMedico agm = new AgendaMedico();//Se creara la Agenda del medico
                            Medico med = (Medico) cbMedico.getSelectedItem();//Se obtendra el objeto del medico haciendo un Unboxing al Combobox seleccionado
                            agm.setHoras(Integer.parseInt(t[0]));
                            agm.setMinutos(Integer.parseInt(t[1]));
                            agm.setIdMedico(clases.FuncionesMedico.retornarIdMedico(med.getRut()));
                            GregorianCalendar c = new GregorianCalendar();
                            c.setTime(fechaO);
                            XMLGregorianCalendar date2 = DatatypeFactory.newInstance().newXMLGregorianCalendar(c);
                            agm.setFecha(date2);
                            ObjectFactory factory = new ObjectFactory();
                            JAXBElement<String> createMessageDescription = factory.createAgendaMedicoDescripcion("Disponible");//Se crea un String de tipo XML
                            agm.setDescripcion(createMessageDescription);
                            lista.getAgendaMedico().add(agm);//Se ingresa los datos al array
                        } catch (DatatypeConfigurationException ex) {
                            Logger.getLogger(CargaAgendaMedico.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        }
        if (clases.FuncionesMedico.recibeListado(lista) == true) {//Si la lista seleccionada es recibida como true, aparece el siguiente mensaje
            JOptionPane.showMessageDialog(this, "Agregados correctamente");
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CargaAgendaMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CargaAgendaMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CargaAgendaMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CargaAgendaMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CargaAgendaMedico().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JComboBox<String> cbMedico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tHoras1;
    public static javax.swing.JTextField txtFechaView;
    // End of variables declaration//GEN-END:variables
}
